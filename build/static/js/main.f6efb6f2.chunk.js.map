{"version":3,"sources":["components/AddPersonForm.js","components/Filter.js","services/persons.js","App.js","index.js"],"names":["AddPersonForm","props","onSubmit","addPerson","className","value","newName","onChange","handleNameChange","newNumber","handleNumberChange","type","Filter","handleFilterChange","id","baseURL","axios","get","person","post","put","delete","Notification","message","App","useState","persons","setPersons","setNewName","setNewNumber","filterTerm","setFilterTerm","setMessage","useEffect","personService","then","response","data","deletePerson","name","window","confirm","filter","p","console","log","event","target","preventDefault","number","checkExists","findIndex","toLowerCase","personUpdatedId","setTimeout","map","catch","error","concat","indexOf","key","onClick","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f6efb6f2.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst AddPersonForm = props => (\r\n\r\n  <form onSubmit={props.addPerson}>\r\n    <div className = \"entryLine\">\r\n      Name: <input\r\n        className = \"entry\"\r\n        value = {props.newName}\r\n        onChange={props.handleNameChange}\r\n      />\r\n    </div>\r\n    <div className = \"entryLine\">\r\n      Number: <input \r\n        className = \"entry\"\r\n        value = {props.newNumber}\r\n        onChange={props.handleNumberChange}\r\n      />\r\n    </div>\r\n    <div>\r\n      <button type=\"submit\">add</button>\r\n    </div>\r\n  </form>\r\n)\r\n\r\nexport default AddPersonForm","import React from 'react'\r\n\r\nconst Filter = ({ handleFilterChange }) => (\r\n  <form\r\n    id = \"filterForm\">\r\n    <div className = \"entryLine\">\r\n      Filter names with: <input\r\n        className = \"filterEntry\"\r\n        onChange={handleFilterChange} />\r\n    </div>\r\n  </form>\r\n)\r\n\r\nexport default Filter","import axios from 'axios'\r\nconst baseURL = '/api/persons/'\r\n\r\nconst getAll = () => {\r\n  // console.log('Fetching names from database')\r\n  return axios.get(baseURL)\r\n}\r\n\r\nconst create = person => {\r\n  // console.log('Creating name ' + person.name + ' in database')\r\n  return axios.post(baseURL, person)\r\n}\r\n\r\nconst update = ( id,  person) => {\r\n  return axios.put(baseURL + id, person)\r\n}\r\n\r\nconst remove = ( id ) => {\r\n  // console.log('removing ' + id + ' from database')\r\n  // console.log(baseURL + id)\r\n  return axios.delete(baseURL + id)\r\n}\r\n\r\nexport default {\r\n  getAll,\r\n  create,\r\n  update,\r\n  remove\r\n}","import React, { useState, useEffect } from 'react'\r\nimport AddPersonForm from './components/AddPersonForm.js'\r\nimport Filter from './components/Filter.js'\r\nimport personService from './services/persons'\r\nimport './index.css'\r\n\r\nconst Notification =({ message }) => {\r\n  if (message === null) {\r\n    return null\r\n  }\r\n  \r\n  return (\r\n    <div className = \"msg\">\r\n      {message}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst App = () => {\r\n\r\n  const [ persons, setPersons] = useState([])\r\n  const [ newName, setNewName ] = useState('')\r\n  const [ newNumber, setNewNumber ] = useState('')\r\n  const [ filterTerm, setFilterTerm ] = useState('')\r\n  const [ message, setMessage ] = useState(null)\r\n\r\n  useEffect(() => {\r\n    personService\r\n      .getAll()\r\n      .then(response => {\r\n        setPersons(response.data)\r\n      })\r\n    },[])\r\n\r\n\r\n  const handleNameChange = (event) => {setNewName(event.target.value)}\r\n  const handleNumberChange = (event) => {setNewNumber(event.target.value)}\r\n  const handleFilterChange = (event) => {setFilterTerm(event.target.value)}\r\n\r\n  const addPerson = (event) => {\r\n    event.preventDefault()\r\n    // console.log(persons)\r\n    const person = { \r\n      name: newName, \r\n      number: newNumber\r\n    }\r\n\r\n    if (!newNumber || !newName) {\r\n      setMessage(`Missing data - cannot add entry to database`)\r\n    } else {\r\n\r\n      //Check that the person is already in the list \r\n      const checkExists = persons.findIndex(person => person.name.toLowerCase() === newName.toLowerCase())\r\n      let personUpdatedId = -1\r\n      \r\n      // get the id of the person should it exist, else index remains as -1\r\n      if (checkExists > -1) {personUpdatedId = persons[checkExists].id} \r\n\r\n      checkExists > -1    // If the person already exists\r\n        ? window.confirm(`${person.name} is already in the phonebook, update number?`)  // ask for confirmation to update\r\n          ? personService   // Update\r\n            .update(personUpdatedId, person)\r\n            .then(\r\n              response => {\r\n                setMessage(`${person.name} updated`)\r\n                setTimeout(() => {setMessage(null)}, 5000)                \r\n                setPersons(\r\n                  persons.map(p => (p.id !== personUpdatedId ? p : response.data))\r\n                )\r\n              }\r\n            )\r\n            .catch(error => {   // promise catch\r\n              setMessage(`The name '${person.name}' was already deleted from the server`)\r\n              setTimeout(() => {setMessage(null)}, 5000) \r\n              \r\n              personService\r\n                .getAll()\r\n                .then(response => {\r\n                  setPersons(response.data)\r\n                })\r\n            })\r\n\r\n          : console.log(`${person.name} not updated`)  // Some other error??\r\n        \r\n        : (personService  // If the person doesn't exist already then create\r\n            .create(person)\r\n            .then(response => {\r\n              // console.log(response.data)\r\n              setPersons(persons.concat(response.data))\r\n              setMessage(`${person.name} added`)\r\n              setTimeout(() => {setMessage(null)}, 5000)\r\n            })\r\n            .catch(error => {   // promise catch\r\n              setMessage(error.response.data.error);\r\n              setTimeout(() => {setMessage(null)}, 5000)\r\n            })\r\n          )\r\n      setNewName('')\r\n      setNewNumber('')\r\n    }\r\n  }\r\n\r\n  const deletePerson = ( name, id ) => {\r\n    // console.log(id)\r\n    window.confirm(`Are you sure you want to delete ${name} (id: ${id})`)\r\n      ? personService.remove(id)\r\n        .then(() => {\r\n          setPersons([...persons.filter(p => p.id !== id)])\r\n        }) \r\n      : console.log(`Not removed entry id: ${id}`)\r\n  }\r\n\r\n  const Rows = ({ persons , filterTerm }) => \r\n  persons\r\n    .filter(person => \r\n      person.name.toLowerCase().indexOf(filterTerm.toLowerCase()) > -1 )  // tried .includes, but couldn't get it to work\r\n    .map(person => (\r\n      <tr key={person.name}>\r\n        <th>{person.name}</th><th>{person.number}</th><th>\r\n        <button onClick={() => { \r\n          // console.log(person)\r\n          deletePerson( person.name, person.id )}\r\n        }>delete</button>\r\n        </th>\r\n      </tr>\r\n    ))\r\n\r\n  return (    \r\n    <div>\r\n\r\n      <h2>Phonebook</h2>\r\n      <Filter handleFilterChange = {handleFilterChange} />\r\n\r\n      <h2>Add a new name and number</h2>\r\n      <AddPersonForm\r\n        addPerson = {addPerson}\r\n        newName = {newName}\r\n        handleNameChange = {handleNameChange}\r\n        newNumber = {newNumber}\r\n        handleNumberChange = {handleNumberChange}\r\n      />\r\n\r\n      <Notification message={message} />\r\n\r\n      <h2>Numbers</h2>\r\n      <table><tbody>\r\n        <Rows id= \"phonebook\" persons={persons} filterTerm={filterTerm} />\r\n      </tbody></table>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App","// Submission for Part 2 - Phonebook\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}